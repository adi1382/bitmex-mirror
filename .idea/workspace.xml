<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="49da39b7-0b12-4d57-9177-87db4699a4db" name="Changes" comment="account, pool">
      <change afterPath="$PROJECT_DIR$/mirror/calibrate.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mirror/fpe_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mirror/handler.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mirror/mem.pprof" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mirror/mirror.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mirror/mirror_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mirror/trace.out" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/optional/bool.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/optional/float64.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/optional/int64.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/optional/string.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/optional/template/optional.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/optional/time.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/optional/types.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pool/cpu.pprof" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pool/goroutine.pprof" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pool/mem.pprof" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pool/pubSub.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pool/pusSub_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pool/rate_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pool/trace.out" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/capitalone/fpe/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/capitalone/fpe/ff3/ff3.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/pkg/profile/.travis.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/pkg/profile/AUTHORS" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/pkg/profile/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/pkg/profile/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/pkg/profile/profile.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/auth/auth.go" beforeDir="false" afterPath="$PROJECT_DIR$/auth/auth.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/bitmex/bitmex.go" beforeDir="false" afterPath="$PROJECT_DIR$/bitmex/bitmex.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/bitmex/errors.go" beforeDir="false" afterPath="$PROJECT_DIR$/bitmex/errors.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/bitmex/order_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/bitmex/order_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/bitmex/request.go" beforeDir="false" afterPath="$PROJECT_DIR$/bitmex/request.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/bitmex/websocket.go" beforeDir="false" afterPath="$PROJECT_DIR$/bitmex/websocket.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/bitmex/wsClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/bitmex/wsClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/bitmex/ws_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/bitmex/ws_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/optional/bool_generated.go" beforeDir="false" afterPath="$PROJECT_DIR$/optional/bool_generated.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/optional/float64_generated.go" beforeDir="false" afterPath="$PROJECT_DIR$/optional/float64_generated.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/optional/int64_generated.go" beforeDir="false" afterPath="$PROJECT_DIR$/optional/int64_generated.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/optional/optional_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/optional/optional_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/optional/string_generated.go" beforeDir="false" afterPath="$PROJECT_DIR$/optional/string_generated.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/optional/time_generated.go" beforeDir="false" afterPath="$PROJECT_DIR$/optional/time_generated.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pool/account.go" beforeDir="false" afterPath="$PROJECT_DIR$/pool/account.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pool/hostAccount.go" beforeDir="false" afterPath="$PROJECT_DIR$/pool/hostAccount.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pool/pool.go" beforeDir="false" afterPath="$PROJECT_DIR$/pool/pool.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pool/pool_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pool/pool_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pool/rest.go" beforeDir="false" afterPath="$PROJECT_DIR$/pool/rest.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pool/subAccount.go" beforeDir="false" afterPath="$PROJECT_DIR$/pool/subAccount.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pool/wsHandler.go" beforeDir="false" afterPath="$PROJECT_DIR$/pool/wsHandler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pool/wsMessage.go" beforeDir="false" afterPath="$PROJECT_DIR$/pool/wsMessage.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sync/AUTHORS" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sync/CONTRIBUTORS" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sync/LICENSE" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sync/PATENTS" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sync/errgroup/errgroup.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/modules.txt" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/modules.txt" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///opt/homebrew/Cellar/go/1.17.6/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="NamedScopeManager">
    <scope name="WSMessage" pattern="file:mirror/wsMessage.go" />
  </component>
  <component name="ProjectId" id="1zEi7KIzZsdItn34MFmaX57SKrK" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable..is.expanded" value="false" />
    <property name="configurable.GoLibrariesConfigurable.is.expanded" value="true" />
    <property name="go.format.on.save.advertiser.fired" value="true" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.vendoring.notification.had.been.shown" value="true" />
    <property name="go.watchers.conflict.with.on.save.actions.check.performed" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/optional" />
    <property name="run.code.analysis.last.selected.profile" value="pProject Default" />
    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
  </component>
  <component name="ReaderModeSettings">
    <option name="enabled" value="false" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/optional" />
      <recent name="$PROJECT_DIR$/vendor/4d63.com/optional" />
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/optional" />
      <recent name="$PROJECT_DIR$/mirror" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestNewPool in github.com/bitmex-mirror/pool">
    <configuration name="go build github.com/bitmex-mirror" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="bitmex-mirror" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/bitmex-mirror" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="BenchmarkFPE in github.com/bitmex-mirror/mirror" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="bitmex-mirror" />
      <working_directory value="$PROJECT_DIR$/mirror" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/bitmex-mirror/mirror" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gobench" />
      <pattern value="^\QBenchmarkFPE\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestClient_GetOrdersRequest in github.com/bitmex-mirror/bitmex" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="bitmex-mirror" />
      <working_directory value="$PROJECT_DIR$/bitmex" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/bitmex-mirror/bitmex" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestClient_GetOrdersRequest\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestFPE in github.com/bitmex-mirror/mirror" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="bitmex-mirror" />
      <working_directory value="$PROJECT_DIR$/mirror" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/bitmex-mirror/mirror" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestFPE\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestNewPool in github.com/bitmex-mirror/pool" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="bitmex-mirror" />
      <working_directory value="$PROJECT_DIR$/pool" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/bitmex-mirror/pool" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestNewPool\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="SwaggerCodegen">
      <option name="activeConfigurationType" value="FILE" />
      <option name="configurationPath" value="" />
      <option name="customJreEnabled" value="false" />
      <option name="customTemplatesPath" value="" />
      <option name="enableDebugLogging" value="false" />
      <option name="generateToPath" value="$PROJECT_DIR$/gen" />
      <option name="generationParameters">
        <list />
      </option>
      <option name="generatorPath" value="https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/5.0.0/openapi-generator-cli-5.0.0.jar" />
      <option name="jdkPath" value="" />
      <option name="language" value="java" />
      <option name="specificationPath" value="$PROJECT_DIR$/swagger.json" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestNewPool in github.com/bitmex-mirror/pool" />
        <item itemvalue="Go Build.go build github.com/bitmex-mirror" />
        <item itemvalue="Go Test.BenchmarkFPE in github.com/bitmex-mirror/mirror" />
        <item itemvalue="Go Test.TestFPE in github.com/bitmex-mirror/mirror" />
        <item itemvalue="Go Test.TestClient_GetOrdersRequest in github.com/bitmex-mirror/bitmex" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <ignored-roots>
      <path value="$PROJECT_DIR$/client/go-optional" />
      <path value="$PROJECT_DIR$/optional/go-optional" />
    </ignored-roots>
    <MESSAGE value="rest" />
    <MESSAGE value="order complete" />
    <MESSAGE value="position, instrument" />
    <MESSAGE value="bitmex pkg complete" />
    <MESSAGE value="bitmex rest, websocket" />
    <MESSAGE value="account, pool" />
    <option name="LAST_COMMIT_MESSAGE" value="account, pool" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>